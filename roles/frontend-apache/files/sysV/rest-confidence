#!/bin/sh

USER="root"
NODE_ENV="production"
PORT=8000
APP_DIR="/opt/cloud-servers"
NODE_APP="rest-confidence"
CONFIG_DIR="/opt/cloud-servers/config.json"
PID_DIR="/var/run/vs"
PID_FILE="$PID_DIR/rest-confidence.pid"
LOG_DIR="/var/log/vs"
LOG_FILE="$LOG_DIR/rest-confidence.log"
REST_EXEC=$(which rest-confidence)
NODE_EXEC=$(which node)
LOCK_FILE="/var/lock/subsys/rest-confidence"

USAGE="Usage: $0 {start|stop|restart|status} [--force]"
FORCE_OP=false

pid_file_exists() {
    [ -f "$PID_FILE" ]
}

lock_file_no_exists() {
    [ ! -f "$LOCK_FILE" ]
}

get_pid() {
    echo "$(cat "$PID_FILE")"
}

is_running() {
    PID=$(get_pid)
    ! [ -z "$(ps aux | awk '{print $2}' | grep "^$PID$")" ]
}

start_it() {
    mkdir -p "$PID_DIR"
    chown $USER:$USER "$PID_DIR"
    mkdir -p "$LOG_DIR"
    chown $USER:$USER "$LOG_DIR"

    echo "Starting rest-confidence ..."
    echo "cd $APP_DIR && PORT=$PORT NODE_ENV=$NODE_ENV $NODE_EXEC $REST_EXEC $CONFIG_DIR 1>>$LOG_FILE 2>&1 & echo \$! > $PID_FILE" | sudo -i -u $USER
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && touch $LOCK_FILE
    echo "Rest-confidence started with pid $(get_pid)"
}

stop_process() {
    PID=$(get_pid)
    echo "Killing process $PID"
    kill $PID
}

remove_pid_file() {
    echo "Removing pid file"
    rm -f "$PID_FILE"
}

remove_lock_file() {
    echo "Removing lock file"
    rm -f "$LOCK_FILE"
}

start_app() {
    if pid_file_exists
    then
        if lock_file_no_exists
        then
            if is_running
            then
                PID=$(get_pid)
                echo "Rest-confidence already running with pid $PID"
                exit 1
            else
                echo "Rest-confidence stopped, but pid file exists"
                if [ $FORCE_OP = true ]
                then
                    echo "Forcing start anyways"
                    #remove_pid_file
                    start_it
                fi
            fi
        else
            echo "Rest-confidence is locked."
        fi
    else
        start_it
    fi
}

stop_app() {
    if pid_file_exists
    then
        if is_running
        then
            echo "Stopping rest-confidence ..."
            stop_process
            #remove_pid_file
            remove_lock_file
            echo "Rest-confidence stopped"
        else
            echo "Rest-confidence already stopped, but pid file exists"
            if [ $FORCE_OP = true ]
            then
                echo "Forcing stop anyways ..."
               #remove_pid_file
                remove_lock_file
                echo "Rest-confidence stopped"
            else
                exit 1
            fi
        fi
    else
        echo "Rest-confidence already stopped, pid file does not exist"
        exit 1
    fi
}

status_app() {
    if pid_file_exists
    then
        if is_running
        then
            PID=$(get_pid)
            echo "Rest-confidence running with pid $PID"
        else
            echo "Rest-confidence stopped, but pid file exists"
        fi
    else
        echo "Rest-confidence stopped"
    fi
}

case "$2" in
    --force)
        FORCE_OP=true
    ;;

    "")
    ;;

    *)
        echo $USAGE
        exit 1
    ;;
esac

case "$1" in
    start)
        start_app
    ;;

    stop)
        stop_app
    ;;

    restart)
        stop_app
        start_app
    ;;

    status)
        status_app
    ;;

    *)
        echo $USAGE
        exit 1
    ;;
esac
